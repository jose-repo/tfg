Index: src/main/java/com/udima/tfg/Constants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/udima/tfg/Constants.java b/src/main/java/com/udima/tfg/Constants.java
new file mode 100644
--- /dev/null	(revision 28eafe979519fea158f3d55f9399b9f10cdaa363)
+++ b/src/main/java/com/udima/tfg/Constants.java	(revision 28eafe979519fea158f3d55f9399b9f10cdaa363)
@@ -0,0 +1,5 @@
+package com.udima.tfg;
+
+public class Constants {
+    public static final String INE_OPERACIONES_DISPONIBLES = "http://servicios.ine.es/wstempus/js/ES/OPERACIONES_DISPONIBLES";
+}
Index: src/main/java/com/udima/tfg/tfg/ServletInitializer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/udima/tfg/tfg/ServletInitializer.java b/src/main/java/com/udima/tfg/ServletInitializer.java
rename from src/main/java/com/udima/tfg/tfg/ServletInitializer.java
rename to src/main/java/com/udima/tfg/ServletInitializer.java
--- a/src/main/java/com/udima/tfg/tfg/ServletInitializer.java	(revision 3c8b572c75b945f43332bd366e3fb7c3106c9014)
+++ b/src/main/java/com/udima/tfg/ServletInitializer.java	(revision 28eafe979519fea158f3d55f9399b9f10cdaa363)
@@ -1,4 +1,4 @@
-package com.udima.tfg.tfg;
+package com.udima.tfg;
 
 import org.springframework.boot.builder.SpringApplicationBuilder;
 import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;
Index: src/main/java/com/udima/tfg/TfgApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/udima/tfg/TfgApplication.java b/src/main/java/com/udima/tfg/TfgApplication.java
new file mode 100644
--- /dev/null	(revision 28eafe979519fea158f3d55f9399b9f10cdaa363)
+++ b/src/main/java/com/udima/tfg/TfgApplication.java	(revision 28eafe979519fea158f3d55f9399b9f10cdaa363)
@@ -0,0 +1,24 @@
+package com.udima.tfg;
+
+import com.fasterxml.jackson.core.JsonProcessingException;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.udima.tfg.model.OperacionesDisponibles;
+import com.udima.tfg.utils.Util;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.util.List;
+
+@SpringBootApplication
+public class TfgApplication {
+
+	public static void main(String[] args) throws MalformedURLException, JsonProcessingException {
+		SpringApplication.run(TfgApplication.class, args);
+		String strOperacionesDisponibles = Util.stream(new URL(Constants.INE_OPERACIONES_DISPONIBLES));
+		ObjectMapper objectMapper = new ObjectMapper();
+		List<OperacionesDisponibles> od = objectMapper.readValue(strOperacionesDisponibles, objectMapper.getTypeFactory().constructCollectionType(List.class, OperacionesDisponibles.class));
+	}
+
+}
Index: src/main/java/com/udima/tfg/model/OperacionesDisponibles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/udima/tfg/model/OperacionesDisponibles.java b/src/main/java/com/udima/tfg/model/OperacionesDisponibles.java
new file mode 100644
--- /dev/null	(revision 28eafe979519fea158f3d55f9399b9f10cdaa363)
+++ b/src/main/java/com/udima/tfg/model/OperacionesDisponibles.java	(revision 28eafe979519fea158f3d55f9399b9f10cdaa363)
@@ -0,0 +1,94 @@
+package com.udima.tfg.model;
+
+import java.util.LinkedHashMap;
+import java.util.Map;
+import com.fasterxml.jackson.annotation.JsonAnyGetter;
+import com.fasterxml.jackson.annotation.JsonAnySetter;
+import com.fasterxml.jackson.annotation.JsonIgnore;
+import com.fasterxml.jackson.annotation.JsonInclude;
+import com.fasterxml.jackson.annotation.JsonProperty;
+import com.fasterxml.jackson.annotation.JsonPropertyOrder;
+
+@JsonInclude(JsonInclude.Include.NON_NULL)
+@JsonPropertyOrder({
+        "Id",
+        "Cod_IOE",
+        "Nombre",
+        "Codigo",
+        "Url"
+})
+public class OperacionesDisponibles {
+
+    @JsonProperty("Id")
+    private int id;
+    @JsonProperty("Cod_IOE")
+    private String codIOE;
+    @JsonProperty("Nombre")
+    private String nombre;
+    @JsonProperty("Codigo")
+    private String codigo;
+    @JsonProperty("Url")
+    private String url;
+    @JsonIgnore
+    private Map<String, Object> additionalProperties = new LinkedHashMap<String, Object>();
+
+    @JsonProperty("Id")
+    public int getId() {
+        return id;
+    }
+
+    @JsonProperty("Id")
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    @JsonProperty("Cod_IOE")
+    public String getCodIOE() {
+        return codIOE;
+    }
+
+    @JsonProperty("Cod_IOE")
+    public void setCodIOE(String codIOE) {
+        this.codIOE = codIOE;
+    }
+
+    @JsonProperty("Nombre")
+    public String getNombre() {
+        return nombre;
+    }
+
+    @JsonProperty("Nombre")
+    public void setNombre(String nombre) {
+        this.nombre = nombre;
+    }
+
+    @JsonProperty("Codigo")
+    public String getCodigo() {
+        return codigo;
+    }
+
+    @JsonProperty("Codigo")
+    public void setCodigo(String codigo) {
+        this.codigo = codigo;
+    }
+
+    @JsonProperty("Url")
+    public String getUrl() {
+        return url;
+    }
+
+    @JsonProperty("Url")
+    public void setUrl(String url) {
+        this.url = url;
+    }
+
+    @JsonAnyGetter
+    public Map<String, Object> getAdditionalProperties() {
+        return this.additionalProperties;
+    }
+
+    @JsonAnySetter
+    public void setAdditionalProperty(String name, Object value) {
+        this.additionalProperties.put(name, value);
+    }
+}
\ No newline at end of file
Index: src/main/java/com/udima/tfg/tfg/TfgApplication.java
===================================================================
diff --git a/src/main/java/com/udima/tfg/tfg/TfgApplication.java b/src/main/java/com/udima/tfg/tfg/TfgApplication.java
deleted file mode 100644
--- a/src/main/java/com/udima/tfg/tfg/TfgApplication.java	(revision 3c8b572c75b945f43332bd366e3fb7c3106c9014)
+++ /dev/null	(revision 3c8b572c75b945f43332bd366e3fb7c3106c9014)
@@ -1,13 +0,0 @@
-package com.udima.tfg.tfg;
-
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-
-@SpringBootApplication
-public class TfgApplication {
-
-	public static void main(String[] args) {
-		SpringApplication.run(TfgApplication.class, args);
-	}
-
-}
Index: src/main/java/com/udima/tfg/utils/Util.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/udima/tfg/utils/Util.java b/src/main/java/com/udima/tfg/utils/Util.java
new file mode 100644
--- /dev/null	(revision 28eafe979519fea158f3d55f9399b9f10cdaa363)
+++ b/src/main/java/com/udima/tfg/utils/Util.java	(revision 28eafe979519fea158f3d55f9399b9f10cdaa363)
@@ -0,0 +1,25 @@
+package com.udima.tfg.utils;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.net.URL;
+
+public class Util {
+    public static String stream(URL url) {
+        try (InputStream input = url.openStream()) {
+            InputStreamReader isr = new InputStreamReader(input);
+            BufferedReader reader = new BufferedReader(isr);
+            StringBuilder json = new StringBuilder();
+            int c;
+            while ((c = reader.read()) != -1) {
+                json.append((char) c);
+            }
+            return json.toString();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+}
Index: src/test/java/com/udima/tfg/tfg/TfgApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/com/udima/tfg/tfg/TfgApplicationTests.java b/src/test/java/com/udima/tfg/TfgApplicationTests.java
rename from src/test/java/com/udima/tfg/tfg/TfgApplicationTests.java
rename to src/test/java/com/udima/tfg/TfgApplicationTests.java
--- a/src/test/java/com/udima/tfg/tfg/TfgApplicationTests.java	(revision 3c8b572c75b945f43332bd366e3fb7c3106c9014)
+++ b/src/test/java/com/udima/tfg/TfgApplicationTests.java	(revision 28eafe979519fea158f3d55f9399b9f10cdaa363)
@@ -1,4 +1,4 @@
-package com.udima.tfg.tfg;
+package com.udima.tfg;
 
 import org.junit.jupiter.api.Test;
 import org.springframework.boot.test.context.SpringBootTest;
